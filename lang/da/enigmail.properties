Enigmail=Enigmail


#####################################################################
# Strings used within enigmailCommon.js and enigmailCommon.jsm
#####################################################################

enigAlert=Enigmail-advarsel
enigConfirm=Enigmail-bekræftelse
enigInfo=Enigmail-information
# enigError=Enigmail Error
enigPrompt=Enigmail-forespørgsel

# dlgYes=&Yes
dlgNo=&Nej
dlgKeepSetting=Husk mit svar og spørg ikke igen
dlgNoPrompt=Vis ikke denne besked igen
# dlg.button.delete=&Delete
dlg.button.cancel=&Afbryd
dlg.button.close=&Luk
dlg.button.continue=&Fortsæt
# dlg.button.skip=&Skip
# dlg.button.overwrite=&Overwrite
# dlg.button.view=&View
# dlg.button.retry=&Retry
# dlg.button.ignore=&Ignore
dlg.button.ok=&OK
# dlg.button.restartNow=Restart &Now
# dlg.button.restartLater=Restart &Later

# initErr.howToFixIt=In order to use Enigmail, GnuPG is required. If you did not install GnuPG yet, the easiest way to do this is using the "Setup Wizard" button below.
# initErr.setupWizard.button=&Setup Wizard
passphraseCleared=Kodesætningen er fjernet.
cannotClearPassphrase=Du bruger et usædvanligt værktøj (såsom gnome-keyring) til at håndtere din kodesætning. Fjernelse af kodesætningen er derfor ikke mulig fra Enigmail.
# noPhotoAvailable=No Photo available
# debugLog.title=Enigmail Debug Log
# error.photoPathNotReadable=Photo path '%S' is not readable

# generalError=Error: %S

#####################################################################
# Strings in enigmailAbout.js
#####################################################################

usingVersion=Kører Enigmail version %S
usingAgent=Anvender %1$S eksekverbare %2$S til at kryptere og dekryptere.
agentError=ERROR: Kunne ikke forbinde til Enigmails kerneservice!
# usingOpenPGPVersion=Cryptographic library: %S

#####################################################################
# Strings in enigmailKeygen.js
#####################################################################

# accessError=Error in accessing Enigmail service

# keygenComplete=Key generation completed! Identity <%S> will be used for signing.
# revokeCertRecommended=We highly recommend to create a revocation certificate for your key. This certificate can be used to invalidate your key, e.g. in case your secret key gets lost or compromised. Do you want to create such a revocation certificate now?
# keyMan.button.generateCert=&Generate Certificate
# genCompleteNoSign=Key generation completed!
# genGoing=Key generation already in progress!

# passNoMatch=Passphrase entries do not match; please re-enter
# passCheckBox=Please check box if specifying no passphrase for key
# passUserName=Please specify user name for this identity
# keygen.missingUserName=There is no name specified for the selected account/identity. Please enter a value in the field  "Your name" in the account settings.
# keygen.passCharProblem=You are using special characters in your passphrase. Unfortunately, this can cause troubles for other applications. We recommend you choose a passphrase consisting only of any of these characters:\na-z A-Z 0-9 /.;:-,!?(){}[]%*
# passSpaceProblem=Due to technical reasons, your passphrase may not start or end with a space character.
# changePassFailed=Changing the passphrase failed.

# keyConfirm=Generate public and secret key for '%S'?
# keyMan.button.generateKey=&Generate Key
# keyAbort=Abort key generation?
# keyMan.button.generateKeyAbort=&Abort Key Generation
# keyMan.button.generateKeyContinue=&Continue Key Generation
# expiryTooLong=You cannot create a key that expires in more than 100 years.
# expiryTooLongShorter=You cannot create a key that expires in more than 90 years.
# expiryTooShort=Your key must be valid for at least one day.
# keyGenFailed=The key generation failed. Please check the Enigmail console (Menu Enigmail > Debugging Options) for details.
# setKeyExpirationDateFailed=The expiration date could not be changed

# Strings in enigmailMessengerOverlay.js
# securityInfo=Enigmail Security Info\n\n

# enigHeader=Enigmail:
# enigContentNote=Enigmail: *Attachments to this message have not been signed nor encrypted*\r\n\r\n
# possiblyPgpMime=Possibly PGP/MIME encrypted or signed message; use 'Decrypt/Verify' function to verify

# saveAttachmentHeader=Enigmail: Save decrypted attachment
# noTempDir=Could not find a temporary directory to write to\nPlease set the TEMP environment variable
# attachmentPgpKey=The attachment '%S' you are opening appears to be an OpenPGP key file.\n\nClick 'Import' to import the keys contained or 'View' to view the file contents in a browser window

# beginPgpPart=********* *BEGIN ENCRYPTED or SIGNED PART* *********
# endPgpPart=********** *END ENCRYPTED or SIGNED PART* **********
# notePartEncrypted=Enigmail: *Parts of the message have NOT been signed nor encrypted*
# noteCutMessage=Enigmail: *Multiple message blocks found -- decryption/verification aborted*

# keyDetailsDesc.keyRevoked=NOTE: The key is revoked.
# keyDetailsDesc.keyExpired=NOTE: The key has expired.

# decryptOkNoSig=Warning\n\nDecryption was successful, but the signature could not be verified correctly
# msgOvl.button.contAnyway=&Continue Anyway
# signature.verifiedOK=The signature for attachment %S was successfully verified
# signature.verifyFailed=The signature for attachment %S could not be verified
# attachment.noMatchToSignature=Could not match attachment '%S' to a signature file
# attachment.noMatchFromSignature=Could not match signature file '%S' to an attachment
# fixBrokenExchangeMsg.failed=Did not succeed to repair message.
enigmail.msgViewColumn.label=Enigmail
# detailsDlg.importKey=Import key
# wksNoIdentity=This key is not linked to any of your email accounts. Please add an account for at least one of the following email addresse(s):\n\n%S
# wksConfirmSuccess=Confirmation email sent.
# wksConfirmFailure=Sending the confirmation email failed.
# autocrypt.importSetupKey.accountPreconfigured=Your account is already correctly configured for Autocrypt.\n\nDo you really want to overwrite your settings with this setup message?
# autocrypt.importSetupKey.selfCreated=This message was created by your currently running instance of Enigmail.\n\nPlease switch to the email client to which you want to transfer the settings, and click on the message on that email client to import the settings.
# autocrypt.importSetupKey.invalidMessage=Error - could not read setup message. The message seems to be corrupted. Please try to create a new setup message on your "other" device.
# autocrypt.importSetupKey.invalidKey=Error - the key could not be imported. The key is either not supported by your version of GnuPG, or it got corrupted.
# autocrypt.importSetupKey.wrongPasswd=The password you entered is wrong. Do you want to retry?
# autocrypt.importSetupKey.success=The Autocrypt setup message was processed successfully. Autocrypt is now available for your account '%S'.

#####################################################################
# Strings in enigmailMsgComposeOverlay.js
#####################################################################

# keysToExport=Select OpenPGP Keys to Insert
keysToUse=Vælg OpenPGP nøgle(r) der skal anvendes til %S
pubKey=Offentlig nøgle til %S\n

# windowLocked=Compose window is locked; send cancelled
# sendUnencrypted=Failed to initialize Enigmail.\nSend unencrypted message?
# composeSpecifyEmail=Please specify your primary email address, which will be used to choose the signing key for outgoing messages.\n If you leave it blank, the FROM address of the message will be used to choose the signing key.
# sendingHiddenRcpt=This message has BCC (blind copy) recipients. If this message is encrypted, it is possible to hide the BCC recipients but users of some products (e.g. PGP Corp.) will not be able to decrypt the message. Given this, we recommend to avoid BCC-emails with encrypted messages.
# sendWithHiddenBcc=Hide BCC recipients
# sendWithShownBcc=Encrypt normally
# sendingNews=Encrypted send operation aborted.\n\nThis message cannot be encrypted because there are newsgroup recipients. Please re-send the message without encryption.
# sendToNewsWarning=Warning: you are about to send an encrypted email to a newsgroup.\n\nThis is discouraged because it only makes sense if all members of the group can decrypt the message, i.e. the message needs to be encrypted with the keys of all group participants. Please send this message only if you know exactly what you are doing.\n\nContinue?
# msgCompose.button.sendAnyway=&Send Message Anyway
quotedPrintableWarn=Du har aktiveret 'quoted-printable'-kodning ved afsendelse af beskeder. Dette kan resultere i ukorrekt dekryptering og/eller verifikation af beskeder.\nVil du deaktivere brug af 'quoted-printable' med det samme?
warning=Advarsel
# signIconClicked=You have manually modified signing. Therefore, while you are composing this message, (de)activating signing does not depend anymore on (de)activating encryption.
# errorOwnKeyUnusable=The key ID '%S' configured for the current identity does not yield a usable OpenPGP key.\n\nPlease ensure that you have a valid, not expired OpenPGP key and that your account settings point to that key.\nIf your key is not expired, then check if you did set Owner trust to "full" or "ultimate".
# msgCompose.cannotSaveDraft=Error while saving draft
# msgCompose.partiallyEncrypted.short=Beware of leaking sensitive information - partially encrypted email.
# msgCompose.partiallyEncrypted.inlinePGP=The message you are replying to contained both unencrypted and encrypted parts. If the sender was not able to decrypt some message parts originally, you may be leaking confidential information that the sender was not able to originally decrypt themselves.\n\nPlease consider removing all quoted text from your reply to this sender.

# msgCompose.encrytionDowngraded=Warning: encryption was enabled when the message was about to be sent. However, due to new Per-Recipient rules, encryption is now disabled.
# msgCompose.internalError=An internal error has occurred.

# msgCompose.toolbarTxt.signAndEncrypt=This message will be signed and encrypted
# msgCompose.toolbarTxt.signOnly=This message will be signed
# msgCompose.toolbarTxt.encryptOnly=This message will be encrypted
# msgCompose.toolbarTxt.noEncryption=This message will be unsigned and unencrypted
# msgCompose.toolbarTxt.disabled=Enigmail is disabled for the selected identity
# msgCompose.protectSubject.tooltip=Protect the message subject
# msgCompose.noSubjectProtection.tooltip=Do not protect the message subject
# msgCompose.protectSubject.dialogTitle=Enable Protection of Subject?
# msgCompose.protectSubject.question=Regular encrypted emails contain the unredacted subject.\n\nWe have established a standard to hide the original subject in the encrypted message\nand replace it with a dummy text, such that the subject is only visible after the email is decrypted.\n\nDo you want to protect the subject in encrypted messages?
# msgCompose.protectSubject.yesButton=&Protect subject
# msgCompose.protectSubject.noButton=&Leave subject unprotected

# msgCompose.detailsButton.label=Details ...
msgCompose.detailsButton.accessKey=D

# note: should end with double newline:
# sendAborted=Send operation aborted.\n\n

# details:
keyNotTrusted=Ikke nok troværdighed for nøglen '%S'
# keyNotFound=Key '%S' not found
# keyRevoked=Key '%S' revoked
# keyExpired=Key '%S' expired

# statPGPMIME=PGP/MIME
# statSMIME=S/MIME
# statSigned=SIGNED
# statEncrypted=ENCRYPTED
# statPlain=UNSIGNED and UNENCRYPTED

# offlineSave=Save %1$S message to %2$S in Unsent Messages folder?

# onlineSend=Send %1$S message to %2$S?
# encryptKeysNote=Note: The message is encrypted for the following User IDs / Keys: %S
# hiddenKey=<hidden key>

# signFailed=Error in Enigmail: encryption/signing failed. Send the message unencrypted?
# msgCompose.button.sendUnencrypted=&Send Unencrypted Message
# recipientsSelectionHdr=Select Recipients for Encryption

# configureNow=You did not yet configure Enigmail security for the selected identity. Do you want to do this now?

# encryption/signing status and associated reasons:
# encryptMessageAuto=Encrypt Message (auto)
# encryptMessageNorm=Encrypt Message
# signMessageAuto=Sign Message (auto)
# signMessageNorm=Sign Message

# encryptOff=Encryption: OFF
# encryptOnWithReason=Encryption: ON (%S)
# encryptOffWithReason=Encryption: OFF (%S)
# encryptOn=Encryption: ON
# signOn=Signing: ON
# signOff=Signing: OFF
# signOnWithReason=Signing: ON (%S)
# signOffWithReason=Signing: OFF (%S)
# encryptReasonEnabledByDefault=enabled by default
# encryptReasonManuallyForced=manually forced
# encryptReasonByRecipientRules=forced by Autocrypt or per-recipient rules
# encryptReasonByAutoEncryption=forced by auto encryption
# encryptReasonByConflict=due to conflict in per-recipient rules

# signReasonEnabledByDefault=enabled by default
# signReasonManuallyForced=manually forced
# signReasonByRecipientRules=forced by Autocrypt or per-recipient rules
# signReasonByConflict=due to conflict in per-recipient rules
# signReasonByEncryptionMode=due to encryption mode

# should not be used anymore:
# encryptYes=Message will be encrypted
# encryptNo=Message will not be encrypted

# should not be used anymore:
# signYes=Message will be signed
# signNo=Message will not be signed


# PGP/MIME status:
# pgpmimeNormal=Protocol: PGP/MIME
# smimeNormal=Protocol: S/MIME
# pgpmimeAuto=Protocol: PGP/MIME (auto)
# smimeAuto=Protocol: S/MIME (auto)

# should not be used anymore
# pgpmimeYes=PGP/MIME will be used
# pgpmimeNo=Inline PGP will be used

# Attach own key status (tooltip strings):
# attachOwnKeyNo=Your own public key will not be attached
# attachOwnKeyYes=Your own public key will be attached
# attachOwnKeyDisabled=Your own public key cannot be attached. You have to select a specific key\nin the OpenPGP section of the Account Settings to enable this feature.

# rulesConflict=Conflicting per-recipient rules detected\n%S\n\nSend message with these settings?
# msgCompose.button.configure=&Configure
# msgCompose.button.send=&Send Message
# msgCompose.button.save=&Save Message

# Strings in enigmailMsgHdrViewOverlay.js
# keyNeeded=Public key %S needed to verify signature
# keyUsed=Public key %S used to verify signature
# clickDecrypt=; use 'Decrypt/Verify' function
# clickDecryptRetry=; use 'Decrypt/Verify' function to retry
# clickDetailsButton=; click on 'Details' button for more information
# clickImportButton=; click on the 'Import Key' button to import the key
# keyTypeUnsupported=; the key type is not supported by your version of GnuPG
# msgTypeUnsupported=; the message is either invalid or not supported by Enigmail
# decryptManually=; click on the 'Decrypt' button to decrypt the message
# verifyManually=; click on the 'Verify' button to verify the signature
# headerView.button.verify=Verify
# headerView.button.decrypt=Decrypt
# msgPart=Part of the message %S
# msgSigned=signed
# msgSignedUnkownKey=signed with unknown key
# msgEncrypted=encrypted
# msgSignedAndEnc=signed and encrypted

unverifiedSig=Uverificeret signatur
# incompleteDecrypt=Decryption incomplete
# needKey=Error - no matching secret key found to decrypt message
# failedDecrypt=Error - decryption failed
badPhrase=Fejl - kodesætning forkert
missingMdcError=Fejl - manglende eller fejlende integritetsbeskyttelse (MDC)
# failedDecryptVerify=Error - decryption/verification failed
# veryLargeMessage.warning=Warning - the message you are decrypting is very large and could crash your mail application.\n\nDo you want to decrypt the message anyway?
# viewInfo=; View > Message security info for details
# brokenExchangeMessage=Broken PGP/MIME message from MS-Exchange.

# decryptedMsg=Decrypted message
# decryptedMsgNotSigned=Decrypted unsigned message
# decryptedMsgWithFormatError=Decrypted message (restored broken PGP email format probably caused by an old Exchange server, so that the result might not be perfect to read)

# usedAlgorithms=Used Algorithms: %1$S and %2$S

# wksConfirmationReq=Web Key Directory Confirmation Request
# wksConfirmationReq.message=This message has been sent by your email provider to confirm deployment of your OpenPGP public key\nin their Web Key Directory.\nProviding your public key helps others to discover your key and thus being able to encrypt messages to you.\n\nIf you want to deploy your key in the Web Key Directory now, please click on the button "Confirm Request" in the status bar.\nOtherwise, simply ignore this message.
# wksConfirmationReq.button.label=Confirm Request

# autocryptSetupReq=Perform Autocrypt Setup
# autocryptSetupReq.button.label=Start Setup
# autocryptSetupReq.setupMsg.desc=This message contains all information to transfer your Autocrypt settings along with your secret key securely from your original device.
# autocryptSetupReq.setupMsg.backup=You can keep this message and use it as a backup for your secret key. If you want to do this, you should write down the password and store it securely.
# autocryptSetupReq.message.import=To import the settings and key(s) in Enigmail, please click on the "Start Setup" button in the status bar.
# autocryptSetupReq.message.sent=Please click on the message on your new device and follow the instuctions to import the settings.
# postbox.cannotUseQuickReply.message=You are replying to an encrypted message. Please use the "expand" icon in the upper right corner of the text box to open your reply in a window, and send the message from there.

# strings in pref-enigmail.js
oldGpgVersion20=Enigmail-initialisering fejlede.\n\nDu bruger GnuPG version %1$S, som ikke længere understøttes. Enigmail kræver GnuPG version %2$S eller nyere. Opgrader din GnuPG-installation, ellers vil Enigmail ikke fungere.
# locateGpg=Locate GnuPG program
# invalidGpgPath=GnuPG cannot be executed with the path provided. Enigmail is therefore deactivated until you change the path to GnuPG again or until you restart the application.
# warningsAreReset=All warnings have been reset.
# prefs.gpgFound=GnuPG was found in %S
# prefs.gpgNotFound=Could not find GnuPG
# prefs.warnAskNever=Warning: activating this option will result in unencrypted emails without any further information if there is no key for one of the recipients -- Enigmail will not inform you if this happens!
# prefs.warnIdleTimeForUnknownAgent=Cannot connect to gpg-agent. Maybe your system uses a specialized tool for passphrase handling (e.g. gnome-keyring, seahorse-agent, KDE wallet manager, ...). Unfortunately Enigmail cannot control the passphrase timeout for the tool you are using. Therefore the respective timeout settings in Enigmail are disregarded.
# prefEnigmail.oneKeyserverOnly2=Error - you can only specify one default keyserver.
# acSetupMessage.desc=Transfer your key to another Autocrypt-enabled device. (<html:span class='enigmailLink' href='https://autocrypt.org'>What is Autocrypt</html:span>)
# pref.dialogRestartApp.desc=In order to change the cryptography provider, you need to restart the application.

# Strings used in core.jsm
# (said file also re-uses some strings from above)

# enterAdminPin=Please type in the ADMIN PIN of your SmartCard
# enterCardPin=Please type your SmartCard PIN

# notInit=Error - Enigmail service not yet initialized
badCommand=Fejl - krypteringskommando mislykkedes
cmdLine=kommandolinje og resultat:
# notRequired=Error - no encryption required
# notComplete=Error - key generation not yet completed
# invalidEmail=Error - invalid email address(es)
noPassphrase=Fejl - ingen kodesætning blev angivet
noPGPblock=Fejl - Ingen gyldig befæstet OpenPGP-datablok fundet
# unverifiedReply=Indented message part (reply) was probably modified
# keyInMessageBody=A key was found in the message body. Click 'Import Key' to import the key
# sigMismatch=Error - Signature mismatch
# cantImport=Error importing public key\n\n
# doImportOne=Import %1$S (%2$S)?
# doImportMultiple=Import the following keys?\n\n%S
# previewFailed=Can't read public key file.

# Strings used in errorHandling.jsm
# sc.wrongCardAvailable=The SmartCard %1$S found in your reader cannot be used to process the message.\nPlease insert your SmartCard %2$S and repeat the operation.
# sc.insertCard=The operation requires your SmartCard %S.\nPlease insert the required SmartCard and repeat the operation.
# sc.removeCard=The operation requires no SmartCard to be in the reader.\nPlease remove your SmartCard and repeat the operation.
# sc.noCardAvailable=No SmartCard could be found in your reader\nPlease insert your SmartCard and repeat the operation.
# sc.noReaderAvailable=Your SmartCard reader could not be accessed\nPlease attach your SmartCard reader, insert your card, and repeat the operation.
# keyError.keySpecNotFound=The email address '%S' cannot be matched to a key on your keyring.
# keyError.keyIdNotFound=The configured key ID '%S' cannot be found on your keyring.
# keyError.resolutionAction=Please select a valid key in the OpenPGP section of your Account Settings.
missingPassphrase=Manglende nøglesætning
errorHandling.gpgAgentInvalid=Dit system kører en version af gpg-agent som ikke egner sig til din GnuPG-version.
errorHandling.gpgAgentError=GnuPG rapporterede en fejl under kommunikationen med gpg-agent (en komponent af GnuPG).
errorHandling.dirmngrError=GnuPG rapporterede en fejl under kommunikationen med dirmngr (en komponent af GnuPG).
errorHandling.pinentryError=GnuPG kan ikke spørge efter din nøglesætning via pinentry.
errorHandling.pinentryCursesError=Din GnuPG-installation er konfigureret til at bruge en konsol til pinentry. Du er dog nødt til at bruge en grafisk version af pinentry sammen med Enigmail.
# errorHandling.readFaq=This is a system setup or configuration error that prevents Enigmail from working properly and cannot be fixed automatically.\n\nWe strongly recommend that you consult our support web site at https://enigmail.net/faq.

# gpgNotFound=Unable to locate GnuPG program '%S'.\nMake sure you have set the GnuPG executable path correctly in the Enigmail Preferences.
# gpgNotInPath=Unable to locate GnuPG executable in the PATH.\nMake sure you have set the GnuPG executable path correctly in the Enigmail Preferences.
# enigmailNotAvailable=Enigmail core Service not available

# prefGood=Good signature from %S
# prefBad=Unverified signature from %S

failCancel=Fejl - Nøglemodtagelse blev afbrudt af brugeren
failKeyExtract=Fejl - nøgleudpakningskommando fejlede
# failKeyNoSubkey=No valid (sub-)key
notFirstBlock=Fejl - Første OpenPGP-blok er ikke en offentlig nøgle
importKeyConfirm=Importer offentlige nøgle(r) som findes i beskeden?
# failKeyImport=Error - key importing failed
fileWriteFailed=Skrivning til fil %S mislykkedes

importKey=Importer offentlig nøgle %S fra nøgleserver:
uploadKey=Send offentlig nøgle %S til nøgleserver:
keyId=NøgleID
# keyAndSigDate=Key ID: 0x%1$S / Signed on: %2$S
# keyFpr=Key fingerprint: %S
# noEmailProvided=You did not provide an email address!
# keyAlreadySigned=The key is already signed, you cannot sign it twice.

#####################################################################
# Strings used in enigmailKeySelection.js
#####################################################################

# selKeyExpired=expired %S
createdHeader=Oprettet
atLeastOneKey=Ingen nøgle valgt! Du skal vælge mindst en nøgle for at acceptere denne besked
fewerKeysThanRecipients=Du har valgt færre nøgler end modtagere. Er du sikker på at listen med krypteringsnøgler er komplet?
userSel.button.goBack=Vælg flere nøgler
userSel.secretKeySel.title=Vælg en privat OpenPGP-nøgle til at signere dine beskeder med
userSel.problemNoKey=Ingen gyldig nøgle
userSel.problemMultipleKeys=Flere nøgler
# should be same as thunderbird ENTITY sendLaterCmd.label:
# sendLaterCmd.label=Send Later

# Strings used in enigmailAttachmentDialog.js
first=første
second=anden

# Strings used in am-enigprefs.js / enigmailEditIdentity.js
# encryptKeyHeader=Select OpenPGP Key for Encryption
# identityName=Identity: %S
# amPrefAutocrypt.desc=<html:span class='enigmailLink' href='https://autocrypt.org'>Autocrypt</html:span> is a standard that defines how to achieve convenient end-to-end-encryption of e-mails. It specifies how e-mail programs negotiate encryption capabilities using regular e-mails.


# Strings used in enigmailSingleRcptSettings.js
# noEncryption=You have activated encryption, but you did not select a key. In order to encrypt emails sent to %1$S, you need to specify one or several valid key(s) from your key list. Do you want to disable encryption for %2$S?
# noKeyToUse=(none - no encryption)
# noEmptyRule=The Rule may not be empty! Please set an email address in the Rule field.
# invalidAddress=The email address(es) you have entered are not valid. You should not set the names of the recipients, just the email addresses. E.g.:\nInvalid: Some Name <some.name@address.net>\nValid:   some.name@address.net
# noCurlyBrackets=The curly brackets {} have a special meaning and should not be used in an email address. If you want to modify the matching behavior for this rule, use the 'Apply rule if recipient ...' option.\nMore information is available from the Help button.

# Strings used in enigmailRulesEditor.js
never=Aldrig
always=Altid
possible=Mulig
# deleteRule.single=Really delete the selected rule?
# deleteRule.multiple=Really delete the selected rules?
# nextRcpt=(Next recipient)
# negateRule=Not
# addKeyToRule=Add key %1$S (%2$S) to per-recipient rule

# Strings used in enigmailSearchKey.js
# needOnline=The function you have selected is not available in offline mode. Please go online and try again.
# noKeyserverConn=Could not connect to keyserver at %S.
# internalError=An internal error occurred. The keys could not be downloaded or imported.
# noKeyFound=We could not find any key matching the specified search criteria.
# keyDownload.keyUnavailable=The key with ID %S is not available on the keyserver. Most likely, the owner of the key did not upload their key to the keyserver.\n\nPlease ask the sender of the message to send you their public key by email.
# searchResult.noUserIdAvailable=(user ID not provided by server)

# Strings in enigmailEditKeyTrustDlg.xul
# setKeyTrustFailed=Setting owner trust failed


# Strings in enigmailSignKeyDlg.js
# signKeyFailed=Key signing failed
# alreadySigned.label=Note: the key %S is already signed with the selected secret key.
# alreadySignedexportable.label=Note: the key %S is already signed exportable with the selected secret key. A local signature does not make sense.
# partlySigned.label=Note: some user IDs of key %S are already signed with the selected secret key.
# noTrustedOwnKeys=No eligible key found for signing! You need at least one fully trusted secret key in order to sign keys.

# Strings in enigmailKeyManager.js
# keyMan.loadingKeys=Loading keys, please wait ...
keyValid.unknown=ukendt
keyValid.invalid=ugyldig
keyValid.disabled=deaktiveret
keyValid.revoked=tilbagetrukket
keyValid.expired=udløbet
keyValid.noSubkey=ingen gyldig undernøgle
keyValid.valid=gyldig
keyValid.ownKey=egen nøgle

keyTrust.untrusted=utroværdig
keyTrust.marginal=marginal
keyTrust.full=troværdig
keyTrust.ultimate=ultimativ
keyTrust.group=(gruppe)
# keyType.public=pub
# keyType.publicAndSec=pub/sec
# keyMan.enableKey=Enable Key
# keyMan.disableKey=Disable Key
userAtt.photo=Brugerattribut (JPEG-billede)

# asciiArmorFile=ASCII Armored Files (*.asc)
# revocationFile=Revocation Files (*.rev)
importKeyFile=Importer OpenPGP nøgle-fil
# gnupgFile=GnuPG Files
# saveRevokeCertAs=Create & Save Revocation Certificate
# revokeCertOK=The revocation certificate has been successfully created. You can use it to invalidate your public key, e.g. in case you would lose your secret key.
# revokeCertFailed=The revocation certificate could not be created.

# addUidOK=User ID added successfully
# addUidFailed=Adding the User ID failed
# noKeySelected=You should select at least one key in order to perform the selected operation
# exportToFile=Export Public Key To File
# exportKeypairToFile=Export Secret and Public Key To File
# exportSecretKey=Do you want to include the secret key in the saved OpenPGP key file?
# saveKeysOK=The keys were successfully saved
# saveKeysFailed=Saving the keys failed
# importKeysFailed=Importing the keys failed
# enableKeyFailed=Enabling/disabling the keys failed
# specificPubKeyFilename=%1$S (0x%2$S) pub
# specificPubSecKeyFilename=%1$S (0x%2$S) pub-sec
# defaultPubKeyFilename=Exported-public-keys
# defaultPubSecKeyFilename=Exported-public-and-secret-keys
# keyMan.uploadNotOwnedKeys=You are uploading a key to a server that validates the key owners' email addresses. You can therefore only upload your own keys to this keyserver.\n\nOperation Aborted.

# sendKeysOk=Key(s) sent successfully
# sendKeysFailed=Sending of keys failed
# receiveKeysOk=Key(s) updated successfully
# receiveKeysFailed=Downloading of keys failed
# keyUpload.verifyEmails=The keyserver will send you an email for each email address of your uploaded key. To confirm publication of your key, you'll need to click on the link in each of the emails you'll receive.

# importFromClip=Do you want to import some key(s) from clipboard?
# importFromUrl=Download public key from this URL:
# copyToClipbrdFailed=Could not copy the selected key(s) to the clipboard.
# copyToClipbrdOK=Key(s) copied to clipboard

# deleteSecretKey=WARNING: You are about to delete a secret key!\nIf you delete your secret key, you will no longer be able to decrypt any messages encrypted for that key, nor will you be able to revoke it.\n\nDo you really want to delete BOTH, the secret key and the public key\n'%S'?
# deleteMix=WARNING: You are about to delete secret keys!\nIf you delete your secret key, you will no longer be able to decrypt any messages encrypted for that key.\n\nDo you really want to delete BOTH, the selected secret and public keys?
# deletePubKey=Do you want to delete the public key\n'%S'?
# deleteSelectedPubKey=Do you want to delete the public keys?
# deleteKeyFailed=The key could not be deleted.
# revokeKeyQuestion=You are about to revoke the key '%S'.\n\nYou will no longer be able to sign with this key, and once distributed, others will no longer be able to encrypt with that key. You can still use the key to decrypt old messages.\n\nDo you want to proceed?
# revokeKeyOk=The key has been revoked. If your key is available on a key server, it is recommended to re-upload it, so that others can see the revocation.
# revokeKeyFailed=The key could not be revoked.
# revokeKeyNotPresent=You have no key (0x%S) which matches this revocation certificate!\n\nIf you have lost your key, you must import it (e.g. from a keyserver) before importing the revocation certificate!
revokeKeyAlreadyRevoked=Nøglen 0x%S er allerede tilbagetrukket.
# refreshAllQuestion=You did not select any key. Would you like to refresh ALL keys?
# refreshKeyServiceOn.warn=Warning: Your keys are currently being refreshed in the background as safely as possible.\nRefreshing all your keys at once will unnecessarily reveal information about you.\nDo you really want to do this?
# refreshKey.warn=Warning: depending on the number of keys and the connection speed, refreshing all keys could be quite a lengthy process!
# downloadContactsKeys.warn=Warning: depending on the number of contacts and the connection speed, downloading all keys could be quite a lengthy process!
# downloadContactsKeys.importFrom=Import contacts from address book '%S'?
# keyMan.button.exportSecKey=Export &Secret Keys
# keyMan.button.exportPubKey=Export &Public Keys Only
keyMan.button.import=&Importer
# keyMan.button.refreshAll=&Refresh All Keys
keyMan.button.revokeKey=&Tilbagetræk nøgle

# keylist.noOtherUids=Has no other identities
# keylist.hasOtherUids=Also known as
# keylist.noPhotos=No photo available
# keylist.hasPhotos=Photos

# keyMan.addphoto.filepicker.title=Select photo to add
# keyMan.addphoto.warnLargeFile=The file you have chosen is larger than 25 kB.\nIt is not recommended to add very large files as it causes very large keys.
# keyMan.addphoto.noJpegFile=The selected file does not appear to be a JPEG file. Please choose a different file.
# keyMan.addphoto.failed=The photo could not be added.
# noWksIdentity=The key %S does not have a WKS identity.
# wksUpload.noKeySupported=The upload was not successful - your provider does not seem to support WKS.

# Strings in enigmailManageUidDlg.xul
# changePrimUidFailed=Changing the primary User ID failed
# changePrimUidOK=The primary user ID was changed successfully
# revokeUidFailed=Revoking the user ID %S failed
# revokeUidOK=User ID %S was revoked successfully. If your key is available on a key server, it is recommended to re-upload it, so that others can see the revocation.
# revokeUidQuestion=Do you really want to revoke the user ID %S?

# Strings in enigmailKeyImportInfo.xul
# importInfoTitle=SUCCESS! Keys imported
# importInfoBits=Bits
importInfoCreated=Oprettet
# importInfoFpr=Fingerprint
# importInfoDetails=(Details)
# importInfoNoKeys=No keys imported.
# importInfoUseSecretKey=Use this key to sign and/or encrypt messages

# Strings in enigmailKeyDetailsDlg.xul
# keyTypePublic=public key
# keyTypePrimary=primary key
# keyTypeSubkey=subkey
# keyTypePair=key pair
# keyExpiryNever=never
keyAlgorithm_1=RSA
keyAlgorithm_2=RSA
keyAlgorithm_3=RSA
keyAlgorithm_16=ELG
keyAlgorithm_17=DSA
keyAlgorithm_18=ECDH
keyAlgorithm_19=ECDSA
keyAlgorithm_20=ELG
keyAlgorithm_22=EDDSA
# keyUsageEncrypt=Encrypt
# keyUsageSign=Sign
# keyUsageCertify=Certify
# keyUsageAuthentication=Authentication
keyDoesNotExpire=Nøgle udløber aldrig

# Strings in enigmailGenCardKey.xul
# keygen.started=Please wait while the key is being generated ....
# keygen.completed=Key Generated. The new Key ID is: 0x%S
# keygen.keyBackup=The key is backed up as %S
# keygen.passRequired=Please specify a passphrase if you want to create a backup copy of your key outside your SmartCard.

# Strings in enigmailSetCardPin.xul
# cardPin.processFailed=Failed to change PIN

# Strings in enigRetrieveProgres.js
# keyserverProgress.refreshing=Refreshing keys, please wait ...
# keyserverProgress.uploading=Uploading keys, please wait ...
# keyserverProgress.wksUploadFailed=Could not upload your key to the Web Key Service
# keyserverTitle.refreshing=Refresh Keys
# keyserverTitle.uploading=Key Upload
# keyserver.result.download.none=No key downloaded.
# keyserver.result.download.1of1=Key successfully downloaded.
# keyserver.result.download.1ofN=Successfully downloaded 1 of %S keys.
# keyserver.result.download.NofN=Successfully downloaded %1$S of %2$S keys.
# keyserver.result.uploadOne=Successfully uploaded 1 key.
# keyserver.result.uploadMany=Successfully uploaded %S keys.

# Strings in enigmailSetupWizard
# setupWizard.installFailed=It seems that the installation was not successful. Please either retry the installation, or install GnuPG manually and locate it using the Browse button.
# setupWizard.downloadForbidden=For your own security, we will not download GnuPG. Please visit https://gnupg.org/ in order to download GnuPG.
# setupWizard.downloadImpossible=We cannot download GnuPG currently. Please try later or visit https://gnupg.org/ in order to download GnuPG.
# setupWizard.hashSumError=The wizard could not verify the integrity of the downloaded file. The file may be broken or tampered with. Do you want to continue the installation anyway?
# setupWizard.importSettingsFile=Specify backup file to load from
# setupWizard.invalidSettingsFile=The specified file is not a valid Enigmail Settings backup file.
# setupWizard.gpgConfExists=The GnuPG config file already exists. Do you want to overwrite it with the one from your old installation?
# setupWizard.noGpgHomeDir=It appears that you configured %S to be used with GnuPG. However, this is not a directory - you cannot use it.
# setupWizard.unmachtedIds=The following identities of your old setup could not be matched:\n%S\nThe settings for these identities were skipped.
# setupWizard.foundAcSetupMessage=Found <html:span class='enigmailLink' href='https://autocrypt.org'>Autocrypt</html:span> Setup Message. To initiate the Autocrypt setup procedure, click on the <html:em>Start Setup</html:em> button below.
# setupWizard.foundAcNoSetupMsg=We determined that you are using an <html:span class='enigmailLink' href='https://autocrypt.org'>Autocrypt-compliant</html:span> email client, but we could not find any Autocrypt Setup Message. We recommend that you create an Autocrypt Setup Message on your existing device and then click on <html:em>Rescan Inbox</html:em>. Alternatively, you can export your settings and keys from an existing Enigmail installation, and restore these settings here.
# setupWizard.setupComplete=Enigmail is now properly configured and ready to use. For further information about using Enigmail please visit <html:span class='enigmailLink' href='https://enigmail.net'>our homepage</html:span>.

# Strings in installGnuPG.jsm
# installGnuPG.downloadFailed=An error occurred while trying to download GnuPG. Please check the console log for further details.
# installGnuPG.installFailed=An error occurred while installing GnuPG. Please check the console log for further details.

# Strings in enigmailAddUidDlg.xul
# addUidDlg.nameOrEmailError=You have to fill in a name and an email address
# addUidDlg.nameMinLengthError=The name must at least have 5 characters
# addUidDlg.invalidEmailError=You must specify a valid email address

# Strings in enigmailCardDetails.js
# Carddetails.NoASCII=OpenPGP Smartcards only support ASCII characters in Firstname/Name.


# network error types
# errorType.SecurityCertificate=The security certificate presented by the web service is not valid.
# errorType.SecurityProtocol=The security protocol used by the web service is unknown.
# errorType.Network=A network error has occurred.

# filter stuff
# filter.folderRequired=You must select a target folder.
# filter.decryptMove.label=Decrypt permanently (Enigmail)
# filter.decryptCopy.label=Create decrypted Copy (Enigmail)
# filter.decryptMove.warnExperimental=Warning - the filter action "Decrypt permanently" may lead to destroyed messages.\n\nWe strongly recommend that you first try the "Create decrypted Copy" filter, test the result carefully, and only start using this filter once you are satisified with the result.
# filter.term.pgpencrypted.label=OpenPGP Encrypted
# filter.encrypt.label=Encrypt to key (Enigmail)
# filter.keyRequired=You must select a recipient key.
# filter.keyNotFound=Could not find an encryption key for '%S'.
# filter.warn.keyNotSecret=Warning - the filter action "Encrypt to key" replaces the recipients.\n\nIf you do not have the secret key for '%S' you will no longer be able to read the emails.

# strings in enigmailConvert.jsm
# converter.decryptBody.failed=Could not decrypt message with subject\n'%S'.\nDo you want to retry with a different passphrase or do you want to skip the message?
# converter.decryptAtt.failed=Could not decrypt attachment '%1$S'\nof message with subject\n'%2$S'.\nDo you want to retry with a different passphrase or do you want to skip the message?

# saveLogFile.title=Save Log File

# strings in gnupg-core.jsm
# unknownSigningAlg=Unknown signing algorithm (ID: %S)
# unknownHashAlg=Unknown cryptographic hash (ID: %S)

# strings in keyRing.jsm
# keyring.photo=Photo
# keyRing.pubKeyRevoked=The key %1$S (key ID %2$S) is revoked.
# keyRing.pubKeyExpired=The key %1$S (key ID %2$S) has expired.
# keyRing.pubKeyNotForSigning=The key %1$S (key ID %2$S) cannot be used for signing.
# keyRing.pubKeyNotForEncryption=The key %1$S (key ID %2$S) cannot be used for encryption.
# keyRing.keyDisabled=The key %1$S (key ID %2$S) is disabled; it cannot be used.
# keyRing.keyNotTrusted=The key %1$S (key ID %2$S) is not trusted enough. Please set the trust level of your key to "ultimate" to use it for signing.
# keyRing.keyInvalid=The key %1$S (key ID %2$S) is not valid. Please consider verifying it correctly. Alternatively use the Default encryption settings in the Enigmail preferences dialog.
# keyRing.signSubKeysRevoked=All signing-subkeys of key %1$S (key ID %2$S) are revoked.
# keyRing.signSubKeysExpired=All signing-subkeys of key %1$S (key ID %2$S) have expired.
# keyRing.signSubKeysUnusable=All signing-subkeys of key %1$S (key ID %2$S) are revoked, expired or otherwise unusable.
# keyRing.encSubKeysRevoked=All encryption subkeys of key %1$S (key ID %2$S) are revoked.
# keyRing.encSubKeysExpired=All encryption subkeys of key %1$S (key ID %2$S) have expired.
# keyRing.noSecretKey=You do not seem to have the secret key for %1$S (key ID %2$S) on your keyring; you cannot use the key for signing.
# keyRing.encSubKeysUnusable=All encryption subkeys of key %1$S (key ID %2$S) are revoked, expired or otherwise unusable.


#strings in exportSettingsWizard.js
# cannotWriteToFile=Cannot save to file '%S'. Please select a different file.
# dataExportError=An error occurred during exporting your data.
# enigmailSettings=EnigmailSettings
# defaultBackupFileName=Enigmail-export
# specifyExportFile=Specify file name for exporting
# homedirParamNotSUpported=Additional parameters that configure paths such as --homedir and --keyring are not supported for exporting/restoring your settings. Please use alternative methods such as setting the environment variable GNUPGHOME.

#strings in expiry.jsm
# expiry.keyExpiresSoon=Your key %1$S will expire in less than %2$S days.\n\nWe recommend that you create a new key pair and configure the corresponding accounts to use it.
# expiry.keysExpireSoon=Your following keys will expire in less than %1$S days:\n%2$S. We recommend that you create new keys and configure the corresponding accounts to use them.
# expiry.keyMissingOwnerTrust=Your secret key %S has missing trust.\n\nWe recommend that you set "You rely on certifications" to "ultimate" in key properties.
# expiry.keysMissingOwnerTrust=The following of your secret keys have missing trust.\n%S.\nWe recommend that you set "You rely on certifications" to "ultimate" in key properties.
expiry.OpenKeyManager=Åbn Enigmail nøglehåndtering
expiry.OpenKeyProperties=Åben nøgle-egenskaber

#strings in gnupg-agent.jsm
# gpghomedir.notexists=The directory '%S' containing your OpenPGP keys does not exist and cannot be created.
# gpghomedir.notwritable=The directory '%S' containing your OpenPGP keys is not writable.
# gpghomedir.notdirectory=The directory '%S' containing your OpenPGP keys is a file instead of a directory.
# gpghomedir.notusable=Please fix the directory permissions or change the location of your GnuPG "home" directory. GnuPG cannot work correctly otherwise.
# gpgAgent.noAutostart=You are using GnuPG version %S. This version requires that you pre-start gpg-agent before Thunderdbird is started, and that the environment variable "GPG_AGENT_INFO" is pre-loaded.\n\nThese preconditions are not met - you cannot use Enigmail until you resolve this issue.

#strings in mimeWkdHandler.jsm
# wkdMessage.body.req=Your email provider processed your request to upload your public key to the OpenPGP Web Key Directory.\n\nPlease click the confirmation button in the Enigmail header to complete the publishing of your public key.
# wkdMessage.body.process=This is an email related to the automatic processing to upload your public key to the OpenPGP Web Key Directory.\n\nYou do not need to take any manual action at this point.

# enigmail.acSetupPasswd.descEnterPasswd=Please enter the setup code that is displayed on the other device.
# enigmail.acSetupPasswd.descCopyPasswd=Please enter the setup code below on your other device to proceed with the setup.

#strings in autocrypt.jsm

# autocrypt.setupMsg.subject=Autocrypt Setup Message
# autocrypt.setupMsg.msgBody=To set up your new device for Autocrypt, please follow the instuctions that should be presented by your new device.
# autocrypt.setupMsg.fileTxt=This is the Autocrypt setup file used to transfer settings and keys between clients. You can decrypt it using the setup code displayed on your old device, then import the key to your keyring.

#strings in upgradeInfo.html
# upgradeInfo.doctitle=What's New in Enigmail v2.0?
# upgradeInfo.welcome1=Welcome to the new Enigmail version 2.0!
# upgradeInfo.welcome2=The release contains a lot of new and changed features. Please take a minute to find out what's new:
# upgradeInfo.encSubject.title=Encrypting the Message Subject
# upgradeInfo.encSubject.desc=We developed a new method that moves the email subject into the encrypted message, and replaces the visible subject with "Encrypted Message". Once such a message is decrypted, the original subject is replaced automatically. Hiding the subject is on by default; there is a preference to turn it off if you don't like it. <i>(Note: this feature requires the message to be sent with PGP/MIME.)</i>
# upgradeInfo.buttons.title=Changed behavior of Encrypt and Sign Buttons
# upgradeInfo.buttons.desc=The <b>Encrypt</b> and <b>Sign</b> buttons in the message composer window now work for both the OpenPGP and S/MIME protocols. If both algorithms are possible, then Enigmail will try to prefer the one for which all keys are available.
# upgradeInfo.autocrypt.title=Support for Autocrypt
# upgradeInfo.autocrypt.desc=Enigmail now supports <a href="https://autocrypt.org/">Autocrypt</a>, a new standard to distribute keys as part of sent messages. Enigmail automatically imports keys from Autocrypt-compliant messages, such that over time more and more emails can be encrypted.
# upgradeInfo.bottom.desc=Please visit <a href="https://enigmail.net/home/docu.php">our documentation</a> for help on using Enigmail.

#strings in enigmailAbout.html
aboutEnigmail.tabName=Om Enigmail
aboutEnigmail.title=OpenPGP-understøttelse leveret af Enigmail
aboutEnigmail.team=Enigmail udvikles af Enigmail-teamet:
aboutEnigmail.projectLeader=Hovedudvikler:
# aboutEnigmail.usability=Usability:
aboutEnigmail.documentation=Dokumentation:
aboutEnigmail.testing=Aftestning:
aboutEnigmail.userSupport=Brugersupport:
aboutEnigmail.userSupport.team=teamet og medlemmer af mailinglister/fora
aboutEnigmail.localization=Lokalisering: <em>Se <a href="https://www.enigmail.net/download/langpack.php" target="_blank">Enigmail-sprogpakkesider</a></em></li>
aboutEnigmail.Credits=Kreditering:
aboutEnigmail.origAuthor=Oprindelig forfatter af Enigmail-udvidelsen
aboutEnigmail.icons=Ikoner:
aboutEnigmail.formerMembers=Tidligere team-medlemmer:
aboutEnigmail.projectHosting=Projekt-hosting:
aboutEnigmail.licenseSupportTitle=Licens &amp; support
aboutEnigmail.license=Enigmail OpenPGP er open source og licenseret under %S
aboutEnigmail.support=Support og download er tilgængelig fra <a href="https://www.enigmail.net/">www.enigmail.net</a>.

#strings in updateGnuPG.html
# updateGnuPG.tabName=GnuPG Update
# updateGnuPG.title=Updates for GnuPG
# updateGnuPG.introduction.desc=Enigmail requires GnuPG to perform its cryptographic functions. We recommend that you keep your installation of GnuPG up to date.
# updateGnuPG.updateRequired=A newer version of GnuPG is available. We strongly recommend that you keep your GnuPG installation up to date. Please click on the <em>Install Update</em> button to download and install the update.
# updateGnuPG.noUpdateRequired=GnuPG is up to date.
# updateGnuPG.cannotUpdate.header=Enigmail only supports updating the following packages:
# updateGnuPG.cannotUpdate.footer=You seem to use some other variant of GnuGP; unfortunately it is therefore not possible for Enigmail to update your GnuGP installation.
# updateGnuPG.installUpdate=Install Update
# updateGnuPG.noMoreUpdates=Don't check for future updates
updateGnuPG.checkUpdate=Check efter GnuPG-opdateringer
# updateGnuPG.success=GnuPG has been updated successfully.
# updateGnuPG.importingKeys=Importing keys in GnuPG. You might be asked for the passphrase(s) of your key(s).
# updateGnuPG.downloadingGnuPG=Downloading GnuPG
# updateGnuPG.startingInstaller=Starting the installer. Please follow the steps of the GnuPG installer wizard.


#strings in keyserver.jsm
# keyserver.error.aborted=Aborted
# keyserver.error.unknown=An unknown error occurred
# keyserver.error.serverError=The keyserver reported an error.
# keyserver.error.importError=Failed to import the downloaded key.
# keyserver.error.unavailable=The keyserver is not available.
# keyserver.error.securityError=The keyserver does not support encrypted access.
# keyserver.error.certificateError=The keyserver’s certificate is not valid.
# keyserver.error.unsupported=The keyserver is not supported by Enigmail.

#strings in mimeDecrypt.jsm
# mimeDecrypt.encryptedPart.attachmentLabel=Encrypted message part
# mimeDecrypt.encryptedPart.concealedData=This is an encrypted message part. You need to open it in a separate window by clicking on the attachment.
# mimeDecrypt.encryptedSubject=Original Subject

#strings in gnupg-key.jsm
# import.secretKeyImportError=An error has occurred in GnuPG while importing secret keys. The import was not successful.

#strings in importSettings.js
# importSettings.errorNoFile=The file you specified is not a regular file!
# importSettings.cancelWhileInProgress=Restoring is in progress. Do you really want to abort the process?
# importSettings.button.abortImport=&Abort process

#strings in pgpjs-keys.jsm
# decryptkey.reasonEncryptedMsg=Your passphrase is needed in order to decrypt an encrypted message.
# decryptkey.reasonSignMsg=Your passphrase is needed in order to sign a message.
# decryptkey.reasonSignAndEncryptMsg=Your passphrase is needed in order to sign an encrypted message.
# decryptkey.reasonKeyOp=Your passphrase is needed in order to make modifications to your secret key.
# decryptkey.keyDescription=Key:\t\t\t%1$S\nFingerprint:\t%2$S\nCreated:\t\t%3$S
# decryptkey.storeInPasswdMgr=Store passphrase in the Password Manager of the application
# decryptkey.dialogTitle=Enigmail - Passphrase Required
# decryptkey.dialog.attempt=(attempt %1$S of %2$S)
# decryptKey.md5Error=Your secret key is protected with an algorithm that Enigmail does not support anymore. Please use GnuPG to change the passphrase of your key. This will upgrade the protection to a modern algorithm.
# decryptKey.wrongPassword=The passphrase for your key is wrong.

#strings in changePasswd.js
# changePasswdDlg.removePassphrase=Do you want to delete the current passphrase without creating a new one?
# changePasswdDlg.removePassButton=&Delete Passphrase
# changePasswdDlg.wrongOldPasswd=The current passphrase for your key is wrong.

#strings in filterWidgets.xml
# filterWidget.selectKey=Select Key
